import typing
import secrets
import discord

from discord import app_commands
from discord.ext import commands

from classes.bot import LittleAngelBot

from modules.configuration import config

class RPSWithBot(discord.ui.Select):
    def __init__(self):
        super().__init__(placeholder='–í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç', min_values=1, max_values=1, options=[
            discord.SelectOption(label='–ö–∞–º–µ–Ω—å', description='–í—ã–±—Ä–∞—Ç—å –∫–∞–º–µ–Ω—å', emoji='‚úä'),
            discord.SelectOption(label='–ù–æ–∂–Ω–∏—Ü—ã', description='–í—ã–±—Ä–∞—Ç—å –Ω–æ–∂–Ω–∏—Ü—ã', emoji='‚úåÔ∏è'),
            discord.SelectOption(label='–ë—É–º–∞–≥–∞', description='–í—ã–±—Ä–∞—Ç—å –±—É–º–∞–≥—É', emoji='‚úã')
        ])

    async def callback(self, interaction: discord.Interaction):
        if self.view.author == interaction.user:
            uvy = self.values[0]
            bvy = secrets.choice(["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"])
            if bvy == "–ö–∞–º–µ–Ω—å":
                if uvy == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = True
                elif uvy == "–ë—É–º–∞–≥–∞":
                    victory = False
                else:
                    victory = None
            elif bvy == "–ù–æ–∂–Ω–∏—Ü—ã":
                if uvy == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = None
                elif uvy == "–ë—É–º–∞–≥–∞":
                    victory = True
                else:
                    victory = False
            else:
                if uvy == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = False
                elif uvy == "–ë—É–º–∞–≥–∞":
                    victory = None
                else:
                    victory = True

            if victory == True:
                await interaction.response.edit_message(embed=discord.Embed(
                    title="–ö–ù–ë",
                    description=f"–í–∞—à –≤—ã–±–æ—Ä: `{uvy}`\n–ú–æ–π –≤—ã–±–æ—Ä: `{bvy}`\n–Ø –ø–æ–±–µ–¥–∏–ª! üòä",
                    color=config.LITTLE_ANGEL_COLOR
                ), view=None)
            elif victory == False:
                await interaction.response.edit_message(embed=discord.Embed(
                    title="–ö–ù–ë",
                    description=f"–í–∞—à –≤—ã–±–æ—Ä: `{uvy}`\n–ú–æ–π –≤—ã–±–æ—Ä: `{bvy}`\n–ü–æ–±–µ–¥–∞ –∑–∞ –≤–∞–º–∏... ü•∫",
                    color=config.LITTLE_ANGEL_COLOR
                ), view=None)
            else:
                await interaction.response.edit_message(embed=discord.Embed(
                    title="–ö–ù–ë",
                    description=f"–í–∞—à –≤—ã–±–æ—Ä: `{uvy}`\n–ú–æ–π –≤—ã–±–æ—Ä: `{bvy}`\n–ù–∏—á—å—è! ü§ù",
                    color=config.LITTLE_ANGEL_COLOR
                ), view=None)
        else:
            return await interaction.response.send_message(embed=discord.Embed(
                title="–û—à–∏–±–∫–∞! ‚ùå",
                description="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–ª –∫–æ–º–∞–Ω–¥—É!",
                color=0xff0000
            ), ephemeral=True)


class RPSWithBotView(discord.ui.View):
    async def on_timeout(self) -> None:
        try:
            message = await self.message.channel.fetch_message(self.message.id)
            if not message.embeds[0].title == "–ö–ù–ë –≤—ã–±–æ—Ä":
                return
            for item in self.children:
                item.disabled = True
            await message.edit(view=self, embed=discord.Embed(title="–ö–ù–ë –≤—ã–±–æ—Ä", description="–ü—Ä–æ–∏–≥–Ω–æ—Ä–∏–ª–∏...", color=0x747880))
        except:
            return

    def __init__(self, timeout, author=None, message=None):
        super().__init__()
        self.author: discord.Member = author
        self.message: discord.Message = message
        self.add_item(RPSWithBot())


class RPSWithUser(discord.ui.Select):
    def __init__(self):
        super().__init__(placeholder='–í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç', min_values=1, max_values=1, options=[
            discord.SelectOption(label='–ö–∞–º–µ–Ω—å', description='–í—ã–±—Ä–∞—Ç—å –∫–∞–º–µ–Ω—å', emoji='‚úä'),
            discord.SelectOption(label='–ù–æ–∂–Ω–∏—Ü—ã', description='–í—ã–±—Ä–∞—Ç—å –Ω–æ–∂–Ω–∏—Ü—ã', emoji='‚úåÔ∏è'),
            discord.SelectOption(label='–ë—É–º–∞–≥–∞', description='–í—ã–±—Ä–∞—Ç—å –±—É–º–∞–≥—É', emoji='‚úã')
        ])

    async def callback(self, interaction: discord.Interaction):
        selected1 = None
        user1 = self.view.user1
        user2 = self.view.user2

        if interaction.user.id not in [user1.id, user2.id]:
            return await interaction.response.send_message(embed=discord.Embed(
                title="–û—à–∏–±–∫–∞! ‚ùå",
                description="–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ!",
                color=0xff0000
            ), ephemeral=True)

        try:
            selected1 = self.view.selected1
        except:
            pass

        if (interaction.user.id == user2.id and selected1 == None) or (interaction.user.id == user1.id and selected1):
            return await interaction.response.send_message(embed=discord.Embed(
                title="–û—à–∏–±–∫–∞! ‚ùå",
                description="–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!",
                color=0xff0000
            ), ephemeral=True)

        if not selected1:
            self.view.selected1 = self.values[0]
            await interaction.response.edit_message(embed=discord.Embed(
                title="–ö–ù–ë –≤—ã–±–æ—Ä",
                description=f"{user1.mention} —Å–æ–≤–µ—Ä—à–∏–ª —Ö–æ–¥\n{user2.mention} –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å!",
                color=config.LITTLE_ANGEL_COLOR
            ), view=self.view)
        else:
            selected2 = self.values[0]
            if selected1 == "–ö–∞–º–µ–Ω—å":
                if selected2 == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = user1
                elif selected2 == "–ë—É–º–∞–≥–∞":
                    victory = user2
                else:
                    victory = None
            elif selected1 == "–ù–æ–∂–Ω–∏—Ü—ã":
                if selected2 == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = None
                elif selected2 == "–ë—É–º–∞–≥–∞":
                    victory = user1
                else:
                    victory = user2
            else:
                if selected2 == "–ù–æ–∂–Ω–∏—Ü—ã":
                    victory = user2
                elif selected2 == "–ë—É–º–∞–≥–∞":
                    victory = None
                else:
                    victory = user1

            if not victory:
                await interaction.response.edit_message(embed=discord.Embed(
                    title="–ö–ù–ë",
                    description=f"–í—ã–±–æ—Ä {user1.mention}: `{selected1}`\n–í—ã–±–æ—Ä {user2.mention}: `{selected2}`\n–ù–∏—á—å—è!",
                    color=config.LITTLE_ANGEL_COLOR
                ), view=None)
            else:
                await interaction.response.edit_message(embed=discord.Embed(
                    title="–ö–ù–ë",
                    description=f"–í—ã–±–æ—Ä {user1.mention}: `{selected1}`\n–í—ã–±–æ—Ä {user2.mention}: `{selected2}`\n–ü–æ–±–µ–¥–∏–ª: {victory.mention}",
                    color=config.LITTLE_ANGEL_COLOR
                ), view=None)


class RPSWithUserView(discord.ui.View):
    async def on_timeout(self) -> None:
        try:
            message = await self.message.channel.fetch_message(self.message.id)
            if not message.embeds[0].title == "–ö–ù–ë –≤—ã–±–æ—Ä":
                return
            for item in self.children:
                item.disabled = True
            await message.edit(view=self, embed=discord.Embed(title="–ö–ù–ë –≤—ã–±–æ—Ä", description="–ü—Ä–æ–∏–≥–Ω–æ—Ä–∏–ª–∏...", color=0x747880))
        except:
            return

    def __init__(self, timeout, user1=None, user2=None, message=None):
        super().__init__()
        self.user1: discord.Member = user1
        self.user2: discord.Member = user2
        self.message: discord.Message = message
        self.add_item(RPSWithUser())

class RPS(commands.Cog):
    def __init__(self, bot: LittleAngelBot):
        self.bot = bot


    @app_commands.command(name='–∫–Ω–±', description='–°—ã–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞?')
    @app_commands.guild_only
    @app_commands.describe(member='–í—ã–±–µ—Ä–∏—Ç–µ —Å –∫–µ–º –∏–≥—Ä–∞—Ç—å')
    async def RPS_command(self, interaction: discord.Interaction, member: discord.Member = None):
        if not member:
            view = RPSWithBotView(timeout=300, author=interaction.user)
            await interaction.response.send_message(
                embed=discord.Embed(
                    title="–ö–ù–ë –≤—ã–±–æ—Ä",
                    description="–•–æ—Ä–æ—à–æ, –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –∏–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –≤ –º–µ–Ω—é —Å–Ω–∏–∑—É",
                    color=config.LITTLE_ANGEL_COLOR
                ),
                view=view
            )
            view.message = await interaction.original_response()
        else:
            if member.bot:
                return await interaction.response.send_message(embed=discord.Embed(
                    title="–û—à–∏–±–∫–∞! ‚ùå",
                    description="–í—ã–±–µ—Ä–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞, –∞ –Ω–µ –±–æ—Ç–∞!",
                    color=0xff0000
                ), ephemeral=True)
            if member == interaction.user:
                return await interaction.response.send_message(embed=discord.Embed(
                    title="–û—à–∏–±–∫–∞! ‚ùå",
                    description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!",
                    color=0xff0000
                ), ephemeral=True)

            view = RPSWithUserView(timeout=300)
            ralis = [interaction.user, member]
            view.user1 = secrets.choice(ralis)
            ralis.remove(view.user1)
            view.user2 = ralis[0]

            await interaction.response.send_message(
                content=" ".join([mem.mention for mem in [interaction.user, member]]),
                embed=discord.Embed(
                    title="–ö–ù–ë –≤—ã–±–æ—Ä",
                    description=f"–ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É!\n–•–æ–¥ –∑–∞ {view.user1.mention}",
                    color=config.LITTLE_ANGEL_COLOR
                ),
                view=view
            )
            view.message = await interaction.original_response()

async def setup(bot: LittleAngelBot):
    await bot.add_cog(RPS(bot))